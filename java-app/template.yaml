apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: java-template
  title: Java Springboot template
  description: Provisions a minimalistic springboot application
spec:
  owner: development
  type: service

  parameters:
    - title: Fill in Component Information
      required:
        - component_id
        - environment
        - base_image
        - owner
      properties:
        component_id:
          title: Component name
          type: string
          description: Provide a component (microservice) name
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        environment:
          title: Environment
          type: string
          description: The environment where this component will be deployed
          enum:
            - dev
            - prod
        base_image:
          title: Base Image
          type: string
          description: The base image used to build the app
        owner:
          title: Owner
          type: string
          description: Owner of the app
    - title: Pipeline Configuration
      properties:
        enabledStages:
          title: Select Pipeline Stages
          type: array
          items:
            type: string
            enum:
              - build
              - test
              - deploy
          uniqueItems: true
          ui:widget: checkboxes

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{parameters.component_id}}
          app_env: ${{parameters.environment}}
          app_img: ${{parameters.base_image}}
          enabledStages: ${{parameters.enabledStages}}

    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: github.com?owner=ben14132-01&repo=${{parameters.component_id}}
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}